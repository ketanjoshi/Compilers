****************************************************
		Ketan Joshi (kkj140030)
CS 6353.001 	: Compiler Construction
Project 2 		: Parser and parse tree generation
****************************************************


FILE CONTENTS:

parser.make:
------------

Modes:
		clean 	- cleans the generated lex and exe files
		build 	- builds the lex.yy.c and parser executables
		exec 	- executed the program using .pt and .sfp files (by default it runs on input1.pt and sample.sfp)
		all 		- runs all the above modes sequentially

Execution: make -f parser.make all

Output:
		"parsetree.out"		- complete parse tree
		"log.out"			- stack contents and reductions used

Optional command line inputs:
If you need to pass the .pt file or .sfp file from commandline you can do so using:
"make -f parser.make <mode> SFP_FILE=<your_sfp_name> PT_FILE=<your_pt_name>"


SFP.l:
------
Lex specifications for token generation


tokens.h:
---------
Token definitions


parser.c:
---------
Main parser code


headers.h treenode.h commons.h:
-------------------------------
Common header inclusions and common functions